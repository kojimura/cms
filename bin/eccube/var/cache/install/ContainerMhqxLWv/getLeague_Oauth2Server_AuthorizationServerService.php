<?php

namespace ContainerMhqxLWv;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getLeague_Oauth2Server_AuthorizationServerService extends Eccube_KernelInstallContainer
{
    /*
     * Gets the private 'league.oauth2_server.authorization_server' shared service.
     *
     * @return \League\OAuth2\Server\AuthorizationServer
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/league/event/src/EmitterAwareInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/league/event/src/EmitterAwareTrait.php';
        include_once \dirname(__DIR__, 4).'/vendor/league/oauth2-server/src/AuthorizationServer.php';
        include_once \dirname(__DIR__, 4).'/vendor/league/oauth2-server/src/Repositories/RepositoryInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/league/oauth2-server/src/Repositories/ClientRepositoryInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/league/oauth2-server-bundle/src/Repository/ClientRepository.php';
        include_once \dirname(__DIR__, 4).'/vendor/league/oauth2-server/src/Repositories/ScopeRepositoryInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/league/oauth2-server-bundle/src/Repository/ScopeRepository.php';
        include_once \dirname(__DIR__, 4).'/vendor/league/oauth2-server-bundle/src/Manager/ScopeManagerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/league/oauth2-server-bundle/src/Manager/InMemory/ScopeManager.php';
        include_once \dirname(__DIR__, 4).'/vendor/league/oauth2-server-bundle/src/Model/Scope.php';
        include_once \dirname(__DIR__, 4).'/vendor/league/oauth2-server/src/CryptKey.php';
        include_once \dirname(__DIR__, 4).'/vendor/league/event/src/ListenerAcceptorInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/league/event/src/EmitterInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/league/event/src/Emitter.php';
        include_once \dirname(__DIR__, 4).'/vendor/league/event/src/ListenerProviderInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/league/oauth2-server-bundle/src/Service/SymfonyLeagueEventListenerProvider.php';
        include_once \dirname(__DIR__, 4).'/vendor/league/oauth2-server/src/Grant/GrantTypeInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/league/oauth2-server/src/CryptTrait.php';
        include_once \dirname(__DIR__, 4).'/vendor/league/oauth2-server/src/Grant/AbstractGrant.php';
        include_once \dirname(__DIR__, 4).'/vendor/league/oauth2-server/src/Grant/RefreshTokenGrant.php';
        include_once \dirname(__DIR__, 4).'/vendor/league/oauth2-server/src/Repositories/RefreshTokenRepositoryInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/league/oauth2-server-bundle/src/Repository/RefreshTokenRepository.php';
        include_once \dirname(__DIR__, 4).'/vendor/league/oauth2-server/src/Grant/AbstractAuthorizeGrant.php';
        include_once \dirname(__DIR__, 4).'/vendor/league/oauth2-server/src/Grant/AuthCodeGrant.php';
        include_once \dirname(__DIR__, 4).'/vendor/league/oauth2-server/src/Repositories/AuthCodeRepositoryInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/league/oauth2-server-bundle/src/Repository/AuthCodeRepository.php';
        include_once \dirname(__DIR__, 4).'/vendor/league/oauth2-server-bundle/src/AuthorizationServer/GrantConfigurator.php';
        include_once \dirname(__DIR__, 4).'/vendor/league/oauth2-server-bundle/src/Converter/ScopeConverterInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/league/oauth2-server-bundle/src/Converter/ScopeConverter.php';

        $a = ($container->privates['league.oauth2_server.manager.doctrine.client'] ?? $container->load('getLeague_Oauth2Server_Manager_Doctrine_ClientService'));
        $b = new \League\Bundle\OAuth2ServerBundle\Manager\InMemory\ScopeManager(NULL);
        $b->save(new \League\Bundle\OAuth2ServerBundle\Model\Scope('read'));
        $b->save(new \League\Bundle\OAuth2ServerBundle\Model\Scope('write'));
        $c = ($container->privates['league.oauth2_server.converter.scope'] ?? ($container->privates['league.oauth2_server.converter.scope'] = new \League\Bundle\OAuth2ServerBundle\Converter\ScopeConverter()));
        $d = ($container->services['event_dispatcher'] ?? $container->getEventDispatcherService());

        $container->privates['league.oauth2_server.authorization_server'] = $instance = new \League\OAuth2\Server\AuthorizationServer(new \League\Bundle\OAuth2ServerBundle\Repository\ClientRepository($a), ($container->privates['league.oauth2_server.repository.access_token'] ?? $container->load('getLeague_Oauth2Server_Repository_AccessTokenService')), new \League\Bundle\OAuth2ServerBundle\Repository\ScopeRepository($b, $a, $c, $d), new \League\OAuth2\Server\CryptKey($container->getEnv('ECCUBE_OAUTH2_AUTHORIZATION_SERVER_PRIVATE_KEY'), NULL, false), $container->getEnv('ECCUBE_OAUTH2_ENCRYPTION_KEY'));

        $e = new \League\Event\Emitter();
        $e->useListenerProvider(new \League\Bundle\OAuth2ServerBundle\Service\SymfonyLeagueEventListenerProvider($d));
        $f = new \League\Bundle\OAuth2ServerBundle\Repository\RefreshTokenRepository(($container->privates['league.oauth2_server.manager.doctrine.refresh_token'] ?? $container->load('getLeague_Oauth2Server_Manager_Doctrine_RefreshTokenService')), ($container->privates['league.oauth2_server.manager.doctrine.access_token'] ?? $container->load('getLeague_Oauth2Server_Manager_Doctrine_AccessTokenService')));

        $g = new \League\OAuth2\Server\Grant\RefreshTokenGrant($f);
        $g->setRefreshTokenTTL(new \DateInterval('P1M'));
        $h = new \League\OAuth2\Server\Grant\AuthCodeGrant(new \League\Bundle\OAuth2ServerBundle\Repository\AuthCodeRepository(($container->privates['league.oauth2_server.manager.doctrine.authorization_code'] ?? $container->load('getLeague_Oauth2Server_Manager_Doctrine_AuthorizationCodeService')), $a, $c), $f, new \DateInterval('PT10M'));
        $h->setRefreshTokenTTL(new \DateInterval('P1M'));

        $instance->setEmitter($e);
        $instance->enableGrantType($g, new \DateInterval('PT1H'));
        $instance->enableGrantType($h, new \DateInterval('PT1H'));
        (new \League\Bundle\OAuth2ServerBundle\AuthorizationServer\GrantConfigurator(new RewindableGenerator(function () use ($container) {
            return new \EmptyIterator();
        }, 0)))->__invoke($instance);

        return $instance;
    }
}
